############################
###       开发环境        ####
############################
####                    ####
####                    ####
################################
#   api文档 knife4j配置 官方配置文档:https://doc.xiaominfo.com/knife4j/documentation/
################################
## 开启增强配置
#knife4j.enable=true
#开启Swagger的Basic认证功能,默认是false
#knife4j.basic.enable=true
## Basic认证用户名
#knife4j.basic.username=test
## Basic认证密码
#knife4j.basic.password=123
## 开启生产环境屏蔽 开启后所有接口文档都不能访问 建议放到application-main.properties中,并将application-main.properties不加入git提交中,以保证生产环境的安全
#knife4j.production=true
################################
#   Redis配置
################################
spring.redis.host=192.168.114.114
spring.redis.port=9011
spring.redis.password=aabbcc123
################################
#   RabbitMQ
################################
spring.rabbitmq.host=192.168.114.114
spring.rabbitmq.port=9013
spring.rabbitmq.username=admin
spring.rabbitmq.password=twjadmin
################################
#   MongoDB
################################
#地址
spring.data.mongodb.host=192.168.114.114
#端口
spring.data.mongodb.port=9012
#认证的库
spring.data.mongodb.authentication-database=admin
#操作的库
spring.data.mongodb.database=SpringBasis
#账号
spring.data.mongodb.username=admin
#密码
spring.data.mongodb.password=123456
# -----  mongo调试
#logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
################################
#   mysql配置
################################
spring.datasource.url=jdbc:mysql://192.168.114.114:9010/test?characterEncoding=UTF8&autoReconnect=true&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# -----  配置log打印所有的数据库操作
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
################################
#   druid 数据库监控
################################
#是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
#允许访问的ip,不配置默认所有地址都可以访问
#spring.datasource.druid.stat-view-servlet.allow=localhost
#连接池的设置
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量 maxIdle已经不再使用
spring.datasource.druid.max-active=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.datasource.druid.time-between-eviction-runs-millis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.datasource.druid.min-evictable-idle-time-millis=30000
#用来检测连接是否有效的sql 必须是一个查询语句
#mysql中为 select 'x'
#oracle中为 select 1 from dual
spring.datasource.druid.validation-query=select 'x'
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-borrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-return=false
#当数据库抛出不可恢复的异常时,抛弃该连接
#spring.datasource.druid.exception-sorter=true
#是否缓存preparedStatement,mysql5.5+建议开启
#spring.datasource.druid.pool-prepared-statements=true
#当值大于0时poolPreparedStatements会自动修改为true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#配置扩展插件
spring.datasource.druid.filters=stat,wall,log4j2
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
################################
#   阿里云短信 强烈建议放到application-main.properties
################################
aliyun.accesskey.id=
aliyun.accesskey.secret=
aliyun.sms.sign=
################################
#   腾讯云短信 强烈建议放到application-main.properties
################################
tencent.secret.id=
tencent.secret.key=
tencent.sms.sign=
tencent.sms.appid=
